{"ast":null,"code":"var _jsxFileName = \"/Users/austin/Desktop/bbgo/frontend/components/TotalAssetsDetails.js\";\nimport React from 'react';\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Card from \"@material-ui/core/Card\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(1)\n  },\n  cardContent: {}\n}));\nconst logoCurrencies = {\n  \"BTC\": true,\n  \"ETH\": true,\n  \"BCH\": true,\n  \"LTC\": true,\n  \"USDT\": true,\n  \"BNB\": true,\n  \"COMP\": true,\n  \"XRP\": true,\n  \"LINK\": true,\n  \"DOT\": true,\n  \"SXP\": true,\n  \"DAI\": true,\n  \"MAX\": true,\n  \"TWD\": true,\n  \"SNT\": true,\n  \"YFI\": true,\n  \"GRT\": true\n};\nexport default function TotalAssetsDetails({\n  assets\n}) {\n  const classes = useStyles();\n  const sortedAssets = [];\n\n  for (let k in assets) {\n    sortedAssets.push(assets[k]);\n  }\n\n  sortedAssets.sort((a, b) => {\n    if (a.inUSD > b.inUSD) {\n      return -1;\n    }\n\n    if (a.inUSD < b.inUSD) {\n      return 1;\n    }\n\n    return 0;\n  });\n  const items = sortedAssets.map(a => {\n    return /*#__PURE__*/_jsxDEV(ListItem, {\n      dense: true,\n      children: [a.currency in logoCurrencies ? /*#__PURE__*/_jsxDEV(ListItemAvatar, {\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          alt: a.currency,\n          src: `/images/${a.currency.toLowerCase()}-logo.svg`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(ListItemAvatar, {\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          alt: a.currency\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: `${a.currency} ${a.total}`,\n        secondary: `=~ ${Math.round(a.inUSD)} USD`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, a.currency, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    variant: \"outlined\",\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      className: classes.cardContent,\n      children: /*#__PURE__*/_jsxDEV(List, {\n        dense: true,\n        children: items\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/Users/austin/Desktop/bbgo/frontend/components/TotalAssetsDetails.js"],"names":["React","CardContent","Card","makeStyles","List","ListItem","ListItemText","ListItemAvatar","Avatar","useStyles","theme","root","margin","spacing","cardContent","logoCurrencies","TotalAssetsDetails","assets","classes","sortedAssets","k","push","sort","a","b","inUSD","items","map","currency","toLowerCase","total","Math","round"],"mappings":"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","sourcesContent":["import React from 'react';\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Card from \"@material-ui/core/Card\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(1),\n    },\n    cardContent: {}\n}));\n\nconst logoCurrencies = {\n    \"BTC\": true,\n    \"ETH\": true,\n    \"BCH\": true,\n    \"LTC\": true,\n    \"USDT\": true,\n    \"BNB\": true,\n    \"COMP\": true,\n    \"XRP\": true,\n    \"LINK\": true,\n    \"DOT\": true,\n    \"SXP\": true,\n    \"DAI\": true,\n    \"MAX\": true,\n    \"TWD\": true,\n    \"SNT\": true,\n    \"YFI\": true,\n    \"GRT\": true,\n}\n\nexport default function TotalAssetsDetails({assets}) {\n    const classes = useStyles();\n\n    const sortedAssets = [];\n    for (let k in assets) {\n        sortedAssets.push(assets[k]);\n    }\n    sortedAssets.sort((a, b) => {\n        if (a.inUSD > b.inUSD) {\n            return -1\n        }\n\n        if (a.inUSD < b.inUSD) {\n            return 1\n        }\n\n        return 0;\n    })\n\n    const items = sortedAssets.map((a) => {\n        return (\n            <ListItem key={a.currency} dense>\n                {\n                    (a.currency in logoCurrencies) ? (\n                        <ListItemAvatar>\n                            <Avatar alt={a.currency} src={`/images/${a.currency.toLowerCase()}-logo.svg`}/>\n                        </ListItemAvatar>\n                    ) : (\n                        <ListItemAvatar>\n                            <Avatar alt={a.currency}/>\n                        </ListItemAvatar>\n                    )\n                }\n                <ListItemText primary={`${a.currency} ${a.total}`} secondary={`=~ ${Math.round(a.inUSD)} USD`}/>\n            </ListItem>\n        )\n    })\n\n    return (\n        <Card className={classes.root} variant=\"outlined\">\n            <CardContent className={classes.cardContent}>\n                <List dense>\n                    {items}\n                </List>\n            </CardContent>\n        </Card>\n    );\n\n}\n"]},"metadata":{},"sourceType":"module"}