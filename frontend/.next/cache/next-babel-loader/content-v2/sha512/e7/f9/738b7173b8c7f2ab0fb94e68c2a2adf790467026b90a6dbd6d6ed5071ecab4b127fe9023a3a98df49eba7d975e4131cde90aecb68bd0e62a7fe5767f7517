{"ast":null,"code":"import React from 'react';\nimport { useRouter } from 'next/router';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ping, saveConfig, setupRestart } from \"../api/bbgo\";\nimport Box from \"@material-ui/core/Box\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useStyles = makeStyles(theme => ({\n  strategyCard: {\n    margin: theme.spacing(1)\n  },\n  formControl: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    minWidth: 120\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginTop: theme.spacing(2),\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n    '& > *': {\n      marginLeft: theme.spacing(1)\n    }\n  }\n}));\nexport default function SaveConfigAndRestart({\n  onBack,\n  onRestarted\n}) {\n  const classes = useStyles();\n  const {\n    push\n  } = useRouter();\n  const [response, setResponse] = React.useState({});\n\n  const handleRestart = () => {\n    saveConfig(resp => {\n      setResponse(resp);\n      setupRestart(resp => {\n        let t;\n        t = setInterval(() => {\n          ping(() => {\n            clearInterval(t);\n            push(\"/\");\n          });\n        }, 1000);\n      }).catch(err => {\n        console.error(err);\n        setResponse(err.response.data);\n      }); // call restart here\n    }).catch(err => {\n      console.error(err);\n      setResponse(err.response.data);\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Save Config and Restart\"\n    }), /*#__PURE__*/_jsxs(Typography, {\n      variant: \"body1\",\n      gutterBottom: true,\n      children: [\"Click \\\"Save and Restart\\\" to save the configurations to the config file \", /*#__PURE__*/_jsx(\"code\", {\n        children: \"bbgo.yaml\"\n      }), \", and save the exchange session credentials to the dotenv file \", /*#__PURE__*/_jsx(\"code\", {\n        children: \".env.local\"\n      }), \".\"]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: classes.buttons,\n      children: [/*#__PURE__*/_jsx(Button, {\n        onClick: () => {\n          if (onBack) {\n            onBack();\n          }\n        },\n        children: \"Back\"\n      }), /*#__PURE__*/_jsx(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleRestart,\n        children: \"Save and Restart\"\n      })]\n    }), response ? response.error ? /*#__PURE__*/_jsx(Box, {\n      m: 2,\n      children: /*#__PURE__*/_jsx(Alert, {\n        severity: \"error\",\n        children: response.error\n      })\n    }) : response.success ? /*#__PURE__*/_jsx(Box, {\n      m: 2,\n      children: /*#__PURE__*/_jsx(Alert, {\n        severity: \"success\",\n        children: \"Config Saved\"\n      })\n    }) : null : null]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}