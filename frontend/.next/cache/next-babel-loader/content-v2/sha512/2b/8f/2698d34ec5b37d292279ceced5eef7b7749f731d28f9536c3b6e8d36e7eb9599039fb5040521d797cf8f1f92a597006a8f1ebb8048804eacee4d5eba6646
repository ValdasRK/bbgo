{"ast":null,"code":"var _jsxFileName = \"/Users/austin/Desktop/bbgo/frontend/pages/orders.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { queryClosedOrders } from '../api/bbgo';\nimport { DataGrid } from '@material-ui/data-grid';\nimport DashboardLayout from '../layouts/DashboardLayout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar columns = [{\n  field: 'gid',\n  headerName: 'GID',\n  width: 80,\n  type: 'number'\n}, {\n  field: 'clientOrderID',\n  headerName: 'Client Order ID',\n  width: 130\n}, {\n  field: 'exchange',\n  headerName: 'Exchange'\n}, {\n  field: 'symbol',\n  headerName: 'Symbol'\n}, {\n  field: 'orderType',\n  headerName: 'Type'\n}, {\n  field: 'side',\n  headerName: 'Side',\n  width: 90\n}, {\n  field: 'averagePrice',\n  headerName: 'Average Price',\n  type: 'number',\n  width: 120\n}, {\n  field: 'quantity',\n  headerName: 'Quantity',\n  type: 'number'\n}, {\n  field: 'executedQuantity',\n  headerName: 'Executed Quantity',\n  type: 'number'\n}, {\n  field: 'status',\n  headerName: 'Status'\n}, {\n  field: 'isMargin',\n  headerName: 'Margin'\n}, {\n  field: 'isIsolated',\n  headerName: 'Isolated'\n}, {\n  field: 'creationTime',\n  headerName: 'Create Time',\n  width: 200\n}];\nvar useStyles = makeStyles(function (theme) {\n  return {\n    paper: {\n      margin: theme.spacing(2),\n      padding: theme.spacing(2)\n    },\n    dataGridContainer: {\n      display: 'flex',\n      height: 'calc(100vh - 64px - 120px)'\n    }\n  };\n});\nexport default function Orders() {\n  _s();\n\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      orders = _useState[0],\n      setOrders = _useState[1];\n\n  useEffect(function () {\n    queryClosedOrders({}, function (orders) {\n      setOrders(orders.map(function (o) {\n        o.id = o.gid;\n        return o;\n      }));\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.dataGridContainer,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flexGrow: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(DataGrid, {\n            rows: orders,\n            columns: columns,\n            pageSize: 50,\n            autoPageSize: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Orders, \"q1BhTnNN8bd07CD9m2yYcx6HoEc=\", false, function () {\n  return [useStyles];\n});\n\n_c = Orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"sources":["/Users/austin/Desktop/bbgo/frontend/pages/orders.js"],"names":["React","useEffect","useState","makeStyles","Typography","Paper","queryClosedOrders","DataGrid","DashboardLayout","columns","field","headerName","width","type","useStyles","theme","paper","margin","spacing","padding","dataGridContainer","display","height","Orders","classes","orders","setOrders","map","o","id","gid","flexGrow"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\n\nimport {makeStyles} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport {queryClosedOrders} from '../api/bbgo';\nimport {DataGrid} from '@material-ui/data-grid';\nimport DashboardLayout from '../layouts/DashboardLayout';\n\n\nconst columns = [\n    {field: 'gid', headerName: 'GID', width: 80, type: 'number'},\n    {field: 'clientOrderID', headerName: 'Client Order ID', width: 130},\n    {field: 'exchange', headerName: 'Exchange'},\n    {field: 'symbol', headerName: 'Symbol'},\n    {field: 'orderType', headerName: 'Type'},\n    {field: 'side', headerName: 'Side', width: 90},\n    {field: 'averagePrice', headerName: 'Average Price', type: 'number', width: 120},\n    {field: 'quantity', headerName: 'Quantity', type: 'number'},\n    {field: 'executedQuantity', headerName: 'Executed Quantity', type: 'number'},\n    {field: 'status', headerName: 'Status'},\n    {field: 'isMargin', headerName: 'Margin'},\n    {field: 'isIsolated', headerName: 'Isolated'},\n    {field: 'creationTime', headerName: 'Create Time', width: 200},\n];\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        margin: theme.spacing(2),\n        padding: theme.spacing(2),\n    },\n    dataGridContainer: {\n        display: 'flex',\n        height: 'calc(100vh - 64px - 120px)',\n    }\n}));\n\nexport default function Orders() {\n    const classes = useStyles();\n\n    const [orders, setOrders] = useState([])\n\n    useEffect(() => {\n        queryClosedOrders({}, (orders) => {\n            setOrders(orders.map((o) => {\n                o.id = o.gid;\n                return o\n            }))\n        })\n    }, [])\n\n    return (\n        <DashboardLayout>\n            <Paper className={classes.paper}>\n                <Typography variant=\"h4\" gutterBottom>\n                    Orders\n                </Typography>\n                <div className={classes.dataGridContainer}>\n                    <div style={{flexGrow: 1}}>\n                        <DataGrid\n                            rows={orders}\n                            columns={columns}\n                            pageSize={50}\n                            autoPageSize={true}\n                        />\n                    </div>\n                </div>\n            </Paper>\n        </DashboardLayout>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}