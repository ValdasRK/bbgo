{"ast":null,"code":"var _jsxFileName = \"/Users/austin/Desktop/bbgo/frontend/components/TotalAssetsSummary.js\";\nimport { useEffect, useState } from \"react\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction aggregateAssetsBy(assets, field) {\n  let total = 0.0;\n\n  for (let key in assets) {\n    if (assets[key]) {\n      let a = assets[key];\n      let value = a[field];\n      total += value;\n    }\n  }\n\n  return total;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(1)\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginTop: 12\n  }\n}));\nexport default function TotalAssetSummary({\n  assets\n}) {\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    variant: \"outlined\",\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.title,\n        color: \"textSecondary\",\n        gutterBottom: true,\n        children: \"Total Account Balance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h2\",\n        children: [Math.round(aggregateAssetsBy(assets, \"inBTC\") * 1e8) / 1e8, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"BTC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 78\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.pos,\n        color: \"textSecondary\",\n        children: \"Estimated Value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h3\",\n        children: [Math.round(aggregateAssetsBy(assets, \"inUSD\") * 100) / 100, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"USD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 78\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 12\n  }, this);\n}","map":{"version":3,"sources":["/Users/austin/Desktop/bbgo/frontend/components/TotalAssetsSummary.js"],"names":["useEffect","useState","Card","CardContent","Typography","makeStyles","aggregateAssetsBy","assets","field","total","key","a","value","useStyles","theme","root","margin","spacing","title","fontSize","pos","marginTop","TotalAssetSummary","classes","Math","round"],"mappings":";AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAAQC,UAAR,QAAyB,0BAAzB;;;AAEA,SAASC,iBAAT,CAA2BC,MAA3B,EAAmCC,KAAnC,EAA0C;AACtC,MAAIC,KAAK,GAAG,GAAZ;;AACA,OAAK,IAAIC,GAAT,IAAgBH,MAAhB,EAAwB;AACpB,QAAIA,MAAM,CAACG,GAAD,CAAV,EAAiB;AACb,UAAIC,CAAC,GAAGJ,MAAM,CAACG,GAAD,CAAd;AACA,UAAIE,KAAK,GAAGD,CAAC,CAACH,KAAD,CAAb;AACAC,MAAAA,KAAK,IAAIG,KAAT;AACH;AACJ;;AAED,SAAOH,KAAP;AACH;;AAED,MAAMI,SAAS,GAAGR,UAAU,CAAES,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADN,GAD+B;AAIrCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,QAAQ,EAAE;AADP,GAJ8B;AAOrCC,EAAAA,GAAG,EAAE;AACDC,IAAAA,SAAS,EAAE;AADV;AAPgC,CAAZ,CAAD,CAA5B;AAYA,eAAe,SAASC,iBAAT,CAA2B;AAAEf,EAAAA;AAAF,CAA3B,EAAuC;AAClD,QAAMgB,OAAO,GAAGV,SAAS,EAAzB;AACA,sBAAO,QAAC,IAAD;AAAM,IAAA,SAAS,EAAEU,OAAO,CAACR,IAAzB;AAA+B,IAAA,OAAO,EAAC,UAAvC;AAAA,2BACH,QAAC,WAAD;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,SAAS,EAAEQ,OAAO,CAACL,KAA/B;AAAsC,QAAA,KAAK,EAAC,eAA5C;AAA4D,QAAA,YAAY,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAC,IAAnC;AAAA,mBACKM,IAAI,CAACC,KAAL,CAAWnB,iBAAiB,CAACC,MAAD,EAAS,OAAT,CAAjB,GAAqC,GAAhD,IAAuD,GAD5D,oBACiE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADjE;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAQI,QAAC,UAAD;AAAY,QAAA,SAAS,EAAEgB,OAAO,CAACH,GAA/B;AAAoC,QAAA,KAAK,EAAC,eAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eAYI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAC,IAAnC;AAAA,mBACKI,IAAI,CAACC,KAAL,CAAWnB,iBAAiB,CAACC,MAAD,EAAS,OAAT,CAAjB,GAAqC,GAAhD,IAAuD,GAD5D,oBACiE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADjE;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AAkBH","sourcesContent":["import {useEffect, useState} from \"react\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\n\nfunction aggregateAssetsBy(assets, field) {\n    let total = 0.0\n    for (let key in assets) {\n        if (assets[key]) {\n            let a = assets[key]\n            let value = a[field]\n            total += value\n        }\n    }\n\n    return total\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(1),\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginTop: 12,\n    },\n}));\n\nexport default function TotalAssetSummary({ assets }) {\n    const classes = useStyles();\n    return <Card className={classes.root} variant=\"outlined\">\n        <CardContent>\n            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                Total Account Balance\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n                {Math.round(aggregateAssetsBy(assets, \"inBTC\") * 1e8) / 1e8} <span>BTC</span>\n            </Typography>\n\n            <Typography className={classes.pos} color=\"textSecondary\">\n                Estimated Value\n            </Typography>\n\n            <Typography variant=\"h5\" component=\"h3\">\n                {Math.round(aggregateAssetsBy(assets, \"inUSD\") * 100) / 100} <span>USD</span>\n            </Typography>\n        </CardContent>\n    </Card>\n}\n"]},"metadata":{},"sourceType":"module"}