{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport Link from \"next/link\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n\n  },\n  toolbarIcon: _objectSpread({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px'\n  }, theme.mixins.toolbar),\n  appBarSpacer: theme.mixins.toolbar,\n  drawerPaper: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0\n    },\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawer: {\n    width: drawerWidth\n  }\n}));\nexport default function SideBar() {\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxs(Drawer, {\n    variant: \"permanent\",\n    className: classes.drawer,\n    PaperProps: {\n      className: classes.drawerPaper\n    },\n    anchor: \"left\",\n    open: true,\n    children: [/*#__PURE__*/_jsx(\"div\", {\n      className: classes.appBarSpacer\n    }), /*#__PURE__*/_jsx(List, {\n      children: /*#__PURE__*/_jsx(Link, {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxs(ListItem, {\n          button: true,\n          children: [/*#__PURE__*/_jsx(ListItemIcon, {\n            children: /*#__PURE__*/_jsx(DashboardIcon, {})\n          }), /*#__PURE__*/_jsx(ListItemText, {\n            primary: \"Dashboard\"\n          })]\n        })\n      })\n    }), /*#__PURE__*/_jsx(Divider, {}), /*#__PURE__*/_jsxs(List, {\n      children: [/*#__PURE__*/_jsx(Link, {\n        href: \"/orders\",\n        children: /*#__PURE__*/_jsxs(ListItem, {\n          button: true,\n          children: [/*#__PURE__*/_jsx(ListItemIcon, {\n            children: /*#__PURE__*/_jsx(ListIcon, {})\n          }), /*#__PURE__*/_jsx(ListItemText, {\n            primary: \"Orders\"\n          })]\n        })\n      }), /*#__PURE__*/_jsx(Link, {\n        href: \"/trades\",\n        children: /*#__PURE__*/_jsxs(ListItem, {\n          button: true,\n          children: [/*#__PURE__*/_jsx(ListItemIcon, {\n            children: /*#__PURE__*/_jsx(ListIcon, {})\n          }), /*#__PURE__*/_jsx(ListItemText, {\n            primary: \"Trades\"\n          })]\n        })\n      }), /*#__PURE__*/_jsxs(ListItem, {\n        button: true,\n        children: [/*#__PURE__*/_jsx(ListItemIcon, {\n          children: /*#__PURE__*/_jsx(TrendingUpIcon, {})\n        }), /*#__PURE__*/_jsx(ListItemText, {\n          primary: \"Strategies\"\n        })]\n      })]\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}