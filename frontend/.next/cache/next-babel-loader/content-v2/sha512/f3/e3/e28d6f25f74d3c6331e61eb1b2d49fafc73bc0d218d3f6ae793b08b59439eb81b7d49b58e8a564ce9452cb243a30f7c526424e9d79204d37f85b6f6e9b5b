{"ast":null,"code":"import _slicedToArray from \"/Users/austin/Desktop/bbgo/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/austin/Desktop/bbgo/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport React, { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport TotalAssetsPie from '../components/TotalAssetsPie';\nimport TotalAssetSummary from '../components/TotalAssetsSummary';\nimport TotalAssetDetails from '../components/TotalAssetsDetails';\nimport TradingVolumePanel from '../components/TradingVolumePanel';\nimport ExchangeSessionTabPanel from '../components/ExchangeSessionTabPanel';\nimport DashboardLayout from '../layouts/DashboardLayout';\nimport { queryAssets, querySessions } from \"../api/bbgo\";\nimport { ChainId, DAppProvider } from '@usedapp/core';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    totalAssetsSummary: {\n      margin: theme.spacing(2),\n      padding: theme.spacing(2)\n    },\n    grid: {\n      flexGrow: 1\n    },\n    control: {\n      padding: theme.spacing(2)\n    }\n  };\n});\nvar config = {\n  readOnlyChainId: ChainId.Mainnet,\n  readOnlyUrls: _defineProperty({}, ChainId.Mainnet, 'https://mainnet.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161')\n}; // props are pageProps passed from _app.tsx\n\nexport default function Home() {\n  var classes = useStyles();\n  var router = useRouter();\n\n  var _useState = useState({}),\n      assets = _useState[0],\n      setAssets = _useState[1];\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      sessions = _React$useState2[0],\n      setSessions = _React$useState2[1];\n\n  React.useEffect(function () {\n    querySessions(function (sessions) {\n      if (sessions && sessions.length > 0) {\n        setSessions(sessions);\n        queryAssets(setAssets);\n      } else {\n        router.push(\"/setup\");\n      }\n    })[\"catch\"](function (err) {\n      console.error(err);\n    });\n  }, [router]);\n\n  if (sessions.length == 0) {\n    return /*#__PURE__*/_jsx(DashboardLayout, {\n      children: /*#__PURE__*/_jsx(Box, {\n        m: 4,\n        children: /*#__PURE__*/_jsx(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: \"Loading\"\n        })\n      })\n    });\n  }\n\n  console.log(\"index: assets\", assets);\n  return /*#__PURE__*/_jsx(DAppProvider, {\n    config: config,\n    children: /*#__PURE__*/_jsxs(DashboardLayout, {\n      children: [/*#__PURE__*/_jsxs(Paper, {\n        className: classes.totalAssetsSummary,\n        children: [/*#__PURE__*/_jsx(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: \"Total Assets\"\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: classes.grid,\n          children: /*#__PURE__*/_jsxs(Grid, {\n            container: true,\n            direction: \"row\",\n            justify: \"space-around\",\n            alignItems: \"flex-start\",\n            spacing: 1,\n            children: [/*#__PURE__*/_jsxs(Grid, {\n              item: true,\n              xs: 12,\n              md: 8,\n              children: [/*#__PURE__*/_jsx(TotalAssetSummary, {\n                assets: assets\n              }), /*#__PURE__*/_jsx(TotalAssetsPie, {\n                assets: assets\n              })]\n            }), /*#__PURE__*/_jsx(Grid, {\n              item: true,\n              xs: 12,\n              md: 4,\n              children: /*#__PURE__*/_jsx(TotalAssetDetails, {\n                assets: assets\n              })\n            })]\n          })\n        })]\n      }), /*#__PURE__*/_jsx(TradingVolumePanel, {}), /*#__PURE__*/_jsx(ExchangeSessionTabPanel, {})]\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}